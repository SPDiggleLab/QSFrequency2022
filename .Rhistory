mod2 = lm(Trypsin ~ Fluorescence, data=df1)
summary(mod2)
plot2 <- plot(df1$`Fluorescence`, (df1$Trypsin))
abline(mod2)
Rep2_Protease <- predict(mod2, data.frame(Fluorescence=Rep2$Fluorescence), se.fit=FALSE)
Rep2_Protease <- as.data.frame(Rep2_Protease)
Rep2_Protease <- cbind(Rep2_Protease,Rep2$Strain,Rep2$Pa_OD)
Rep1_Protease <- predict(mod2, data.frame(Fluorescence=Rep1$Fluorescence), se.fit=FALSE)
Rep1_Protease <- as.data.frame(Rep1_Protease)
Rep1_Protease <- cbind(Rep1_Protease,Rep1$Strain,Rep1$Pa_OD)
Rep3_Protease <- predict(mod2, data.frame(Fluorescence=Rep3$Fluorescence), se.fit=FALSE)
Rep3_Protease <- as.data.frame(Rep3_Protease)
Rep3_Protease <- cbind(Rep3_Protease,Rep3$Strain,Rep3$Pa_OD)
#now nromalize protease readings by OD
Rep1_Protease$Normalized_Protease <- Rep1_Protease$Rep1_Protease/Rep1_Protease$`Rep1$Pa_OD`
Rep2_Protease$Normalized_Protease <- Rep2_Protease$Rep2_Protease/Rep2_Protease$`Rep2$Pa_OD`
Rep3_Protease$Normalized_Protease <- Rep3_Protease$Rep3_Protease/Rep3_Protease$`Rep3$Pa_OD`
#now combine into dataframe to create graph
colnames(Rep1_Protease) <-c('Protease_raw','Strain','Pa_OD','Normalized_Protease')
colnames(Rep2_Protease) <-c('Protease_raw','Strain','Pa_OD','Normalized_Protease')
colnames(Rep3_Protease) <-c('Protease_raw','Strain','Pa_OD','Normalized_Protease')
Repscombined <- rbind(Rep1_Protease,Rep2_Protease,Rep3_Protease)
#calculate mean and sd for all replicates, after normalizing by OD growth
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
proteasedata <- data_summary(Repscombined, varname="Normalized_Protease",
groupnames=c("Strain"))
proteasedata <- proteasedata[mixedorder(as.character(proteasedata$Strain)),]
rownames(proteasedata) = NULL
proteasedata <- proteasedata[c(15,13,14,1:12),] #new order
#give our lab names change to published strain names
proteasedata$LabStrainNames <- straincode$Lab
proteasedata$PublishedStrainNames <- straincode$Published
rownames(proteasedata) = NULL
#divide all values by PAO1 and multiple by 100
proteasedata$Percent <- ((proteasedata$Normalized_Protease)/(proteasedata$Normalized_Protease[c(1)])*100)
#plot data, first make strain names a factor so it stays in order
proteasedata$PublishedStrainNames <- factor(proteasedata$PublishedStrainNames,levels = proteasedata$PublishedStrainNames)
p<- ggplot(proteasedata, aes(x=PublishedStrainNames, y=Normalized_Protease)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=Normalized_Protease-sd, ymax=Normalized_Protease+sd), width=.2,
position=position_dodge(.9))
print(p)
# Add labels and make x labels vertical so you can read them
p+labs(x="Strain", y = "Protease(µg/mL)")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values=c('#999999','#E69F00'))
#plot data, first make strain names a factor so it stays in order
proteasedata$PublishedStrainNames <- factor(proteasedata$PublishedStrainNames,levels = proteasedata$PublishedStrainNames)
p1<- ggplot(proteasedata, aes(x=PublishedStrainNames, y=Percent)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
print(p1)
# Add labels and make x labels vertical so you can read them
p1+labs(x="Strain", y = "Protease Compared to PAO1 (%)")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values=c('#999999','#E69F00'))
View(proteasedata)
View(Repscombined)
standard <-read_csv("Protease_Assay_3.31.22/proteasedata03312022.csv")
Rep1 <- read_csv('Protease_Activity_2_22_22/2.22.22protease.csv') #bioreplicate 1, tech triplicates
Rep2 <- read_csv('Re__Excel_files_from_today/03.01.22protease.csv') #bio rep 2, tech triplicates
Rep3 <- read.csv("Protease_Assay_3_15_22/3.15.2022protease.csv")
df1 <- standard
mod2 = lm(Trypsin ~ Fluorescence, data=df1)
summary(mod2)
plot2 <- plot(df1$`Fluorescence`, (df1$Trypsin))
abline(mod2)
mod2 = lm(Trypsin ~ Fluorescence, data=df1)
View(df1)
standard <-read_csv("Protease_Assay_3.31.22/proteasestandard_3.31.22.csv")
df1 <- standard
mod2 = lm(Trypsin ~ Fluorescence, data=df1)
summary(mod2)
plot2 <- plot(df1$`Fluorescence`, (df1$Trypsin))
abline(mod2)
Rep2_Protease <- predict(mod2, data.frame(Fluorescence=Rep2$Fluorescence), se.fit=FALSE)
Rep2_Protease <- as.data.frame(Rep2_Protease)
Rep2_Protease <- cbind(Rep2_Protease,Rep2$Strain,Rep2$Pa_OD)
Rep1_Protease <- predict(mod2, data.frame(Fluorescence=Rep1$Fluorescence), se.fit=FALSE)
Rep1_Protease <- as.data.frame(Rep1_Protease)
Rep1_Protease <- cbind(Rep1_Protease,Rep1$Strain,Rep1$Pa_OD)
Rep3_Protease <- predict(mod2, data.frame(Fluorescence=Rep3$Fluorescence), se.fit=FALSE)
Rep3_Protease <- as.data.frame(Rep3_Protease)
Rep3_Protease <- cbind(Rep3_Protease,Rep3$Strain,Rep3$Pa_OD)
Rep1_Protease$Normalized_Protease <- Rep1_Protease$Rep1_Protease/Rep1_Protease$`Rep1$Pa_OD`
Rep2_Protease$Normalized_Protease <- Rep2_Protease$Rep2_Protease/Rep2_Protease$`Rep2$Pa_OD`
Rep3_Protease$Normalized_Protease <- Rep3_Protease$Rep3_Protease/Rep3_Protease$`Rep3$Pa_OD`
colnames(Rep1_Protease) <-c('Protease_raw','Strain','Pa_OD','Normalized_Protease')
colnames(Rep2_Protease) <-c('Protease_raw','Strain','Pa_OD','Normalized_Protease')
colnames(Rep3_Protease) <-c('Protease_raw','Strain','Pa_OD','Normalized_Protease')
Repscombined <- rbind(Rep1_Protease,Rep2_Protease,Rep3_Protease)
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
proteasedata <- data_summary(Repscombined, varname="Normalized_Protease",
groupnames=c("Strain"))
proteasedata <- proteasedata[mixedorder(as.character(proteasedata$Strain)),]
rownames(proteasedata) = NULL
proteasedata <- proteasedata[c(15,13,14,1:12),]
proteasedata$LabStrainNames <- straincode$Lab
proteasedata$PublishedStrainNames <- straincode$Published
rownames(proteasedata) = NULL
#divide all values by PAO1 and multiple by 100
proteasedata$Percent <- ((proteasedata$Normalized_Protease)/(proteasedata$Normalized_Protease[c(1)])*100)
proteasedata$PublishedStrainNames <- factor(proteasedata$PublishedStrainNames,levels = proteasedata$PublishedStrainNames)
p<- ggplot(proteasedata, aes(x=PublishedStrainNames, y=Normalized_Protease)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=Normalized_Protease-sd, ymax=Normalized_Protease+sd), width=.2,
position=position_dodge(.9))
print(p)
View(proteasedata)
standard <-read_csv("proteasestandard03152022.csv")
View(standard)
straincode <- read_csv("straincode.csv")
Rep1 <- read_csv('Protease_Activity_2_22_22/2.22.22protease.csv') #bioreplicate 1, tech triplicates
Rep2 <- read_csv('Re__Excel_files_from_today/03.01.22protease.csv') #bio rep 2, tech triplicates
Rep3 <- read.csv("Protease_Assay_3_15_22/3.15.2022protease.csv")
df1 <- standard
mod2 = lm(Trypsin ~ Fluorescence, data=df1)
summary(mod2)
plot2 <- plot(df1$`Fluorescence`, (df1$Trypsin))
abline(mod2)
Rep2_Protease <- predict(mod2, data.frame(Fluorescence=Rep2$Fluorescence), se.fit=FALSE)
Rep2_Protease <- as.data.frame(Rep2_Protease)
Rep2_Protease <- cbind(Rep2_Protease,Rep2$Strain,Rep2$Pa_OD)
Rep1_Protease <- predict(mod2, data.frame(Fluorescence=Rep1$Fluorescence), se.fit=FALSE)
Rep1_Protease <- as.data.frame(Rep1_Protease)
Rep1_Protease <- cbind(Rep1_Protease,Rep1$Strain,Rep1$Pa_OD)
Rep3_Protease <- predict(mod2, data.frame(Fluorescence=Rep3$Fluorescence), se.fit=FALSE)
Rep3_Protease <- as.data.frame(Rep3_Protease)
Rep3_Protease <- cbind(Rep3_Protease,Rep3$Strain,Rep3$Pa_OD)
Rep1_Protease$Normalized_Protease <- Rep1_Protease$Rep1_Protease/Rep1_Protease$`Rep1$Pa_OD`
Rep2_Protease$Normalized_Protease <- Rep2_Protease$Rep2_Protease/Rep2_Protease$`Rep2$Pa_OD`
Rep3_Protease$Normalized_Protease <- Rep3_Protease$Rep3_Protease/Rep3_Protease$`Rep3$Pa_OD`
colnames(Rep1_Protease) <-c('Protease_raw','Strain','Pa_OD','Normalized_Protease')
colnames(Rep2_Protease) <-c('Protease_raw','Strain','Pa_OD','Normalized_Protease')
colnames(Rep3_Protease) <-c('Protease_raw','Strain','Pa_OD','Normalized_Protease')
Repscombined <- rbind(Rep1_Protease,Rep2_Protease,Rep3_Protease)
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
proteasedata <- data_summary(Repscombined, varname="Normalized_Protease",
groupnames=c("Strain"))
proteasedata <- proteasedata[mixedorder(as.character(proteasedata$Strain)),]
rownames(proteasedata) = NULL
proteasedata <- proteasedata[c(15,13,14,1:12),]
proteasedata$LabStrainNames <- straincode$Lab
proteasedata$PublishedStrainNames <- straincode$Published
rownames(proteasedata) = NULL
proteasedata$Percent <- ((proteasedata$Normalized_Protease)/(proteasedata$Normalized_Protease[c(1)])*100)
proteasedata$PublishedStrainNames <- factor(proteasedata$PublishedStrainNames,levels = proteasedata$PublishedStrainNames)
p<- ggplot(proteasedata, aes(x=PublishedStrainNames, y=Normalized_Protease)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=Normalized_Protease-sd, ymax=Normalized_Protease+sd), width=.2,
position=position_dodge(.9))
print(p)
p+labs(x="Strain", y = "Protease(µg/mL)")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values=c('#999999','#E69F00'))
View(proteasedata)
standard <-read_csv("Protease_Assay_3.31.22/proteasestandard_3.31.22.csv")
straincode <- read_csv("straincode.csv") #convert lab strain names to published names
Rep1 <- read_csv('Protease_Activity_2_22_22/2.22.22protease.csv') #bioreplicate 1, tech triplicates
Rep2 <- read_csv('Re__Excel_files_from_today/03.01.22protease.csv') #bio rep 2, tech triplicates
Rep3 <- read.csv("Protease_Assay_3_15_22/3.15.2022protease.csv")#bio rep 3, tech triplicates
df1 <- standard #use this
mod2 = lm(Trypsin ~ Fluorescence, data=df1)
summary(mod2)
plot2 <- plot(df1$`Fluorescence`, (df1$Trypsin))
abline(mod2)
Rep2_Protease <- predict(mod2, data.frame(Fluorescence=Rep2$Fluorescence), se.fit=FALSE)
Rep2_Protease <- as.data.frame(Rep2_Protease)
Rep2_Protease <- cbind(Rep2_Protease,Rep2$Strain,Rep2$Pa_OD)
Rep1_Protease <- predict(mod2, data.frame(Fluorescence=Rep1$Fluorescence), se.fit=FALSE)
Rep1_Protease <- as.data.frame(Rep1_Protease)
Rep1_Protease <- cbind(Rep1_Protease,Rep1$Strain,Rep1$Pa_OD)
Rep3_Protease <- predict(mod2, data.frame(Fluorescence=Rep3$Fluorescence), se.fit=FALSE)
Rep3_Protease <- as.data.frame(Rep3_Protease)
Rep3_Protease <- cbind(Rep3_Protease,Rep3$Strain,Rep3$Pa_OD)
Rep1_Protease$Normalized_Protease <- Rep1_Protease$Rep1_Protease/Rep1_Protease$`Rep1$Pa_OD`
Rep2_Protease$Normalized_Protease <- Rep2_Protease$Rep2_Protease/Rep2_Protease$`Rep2$Pa_OD`
Rep3_Protease$Normalized_Protease <- Rep3_Protease$Rep3_Protease/Rep3_Protease$`Rep3$Pa_OD`
colnames(Rep1_Protease) <-c('Protease_raw','Strain','Pa_OD','Normalized_Protease')
colnames(Rep2_Protease) <-c('Protease_raw','Strain','Pa_OD','Normalized_Protease')
colnames(Rep3_Protease) <-c('Protease_raw','Strain','Pa_OD','Normalized_Protease')
Repscombined <- rbind(Rep1_Protease,Rep2_Protease,Rep3_Protease)
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
proteasedata <- data_summary(Repscombined, varname="Normalized_Protease",
groupnames=c("Strain"))
proteasedata <- proteasedata[mixedorder(as.character(proteasedata$Strain)),]
rownames(proteasedata) = NULL
proteasedata <- proteasedata[c(15,13,14,1:12),] #new order
proteasedata$LabStrainNames <- straincode$Lab
proteasedata$PublishedStrainNames <- straincode$Published
rownames(proteasedata) = NULL
proteasedata$Percent <- ((proteasedata$Normalized_Protease)/(proteasedata$Normalized_Protease[c(1)])*100)
proteasedata$PublishedStrainNames <- factor(proteasedata$PublishedStrainNames,levels = proteasedata$PublishedStrainNames)
p<- ggplot(proteasedata, aes(x=PublishedStrainNames, y=Normalized_Protease)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=Normalized_Protease-sd, ymax=Normalized_Protease+sd), width=.2,
position=position_dodge(.9))
print(p)
p+labs(x="Strain", y = "Protease(µg/mL)")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values=c('#999999','#E69F00'))
proteasedata$PublishedStrainNames <- factor(proteasedata$PublishedStrainNames,levels = proteasedata$PublishedStrainNames)
p1<- ggplot(proteasedata, aes(x=PublishedStrainNames, y=Percent)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
print(p1)
p1+labs(x="Strain", y = "Protease Compared to PAO1 (%)")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values=c('#999999','#E69F00'))
View(proteasedata)
View(Repscombined)
straincode <- read_csv("straincode.csv") #convert lab strain names to published names
Rep1 <- read_csv('Protease_Activity_2_22_22/2.22.22protease.csv') #bioreplicate 1, tech triplicates
Rep2 <- read_csv('Re__Excel_files_from_today/03.01.22protease.csv') #bio rep 2, tech triplicates
Rep3 <- read.csv("Protease_Assay_3_15_22/3.15.2022protease.csv")#bio rep 3, tech triplicates
Repscombined <- rbind(Rep1,Rep2,Rep3)
View(Repscombined)
Repscombined$Normalized_Fluor <- Repscombined$Fluorescence/Repscombined$Pa_OD
#calculate mean and sd for all replicates, after normalizing by OD growth
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
proteasedata <- data_summary(Repscombined, varname="Normalized_Fluor",
groupnames=c("Strain"))
#give our lab names change to published strain names
proteasedata$LabStrainNames <- straincode$Lab
proteasedata$PublishedStrainNames <- straincode$Published
rownames(proteasedata) = NULL
View(proteasedata)
library(tidyverse)
library(drc)
library(gtools)
straincode <- read_csv("straincode.csv") #convert lab strain names to published names
Rep1 <- read_csv('Protease_Activity_2_22_22/2.22.22protease.csv') #bioreplicate 1, tech triplicates
Rep2 <- read_csv('Re__Excel_files_from_today/03.01.22protease.csv') #bio rep 2, tech triplicates
Rep3 <- read.csv("Protease_Assay_3_15_22/3.15.2022protease.csv")#bio rep 3, tech triplicates
Repscombined <- rbind(Rep1,Rep2,Rep3)
#now nromalize fluor readings by OD
Repscombined$Normalized_Fluor <- Repscombined$Fluorescence/Repscombined$Pa_OD
#calculate mean and sd for all replicates, after normalizing by OD growth
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
proteasedata <- data_summary(Repscombined, varname="Normalized_Fluor",
groupnames=c("Strain"))
proteasedata <- proteasedata[mixedorder(as.character(proteasedata$Strain)),]
rownames(proteasedata) = NULL
proteasedata <- proteasedata[c(15,13,14,1:12),] #new order
View(proteasedata)
#give our lab names change to published strain names
proteasedata$LabStrainNames <- straincode$Lab
proteasedata$PublishedStrainNames <- straincode$Published
rownames(proteasedata) = NULL
#divide all values by PAO1 and multiple by 100
proteasedata$Percent <- ((proteasedata$Normalized_Fluor)/(proteasedata$Normalized_Fluor[c(1)])*100)
View(Repscombined)
standard <-read_csv("proteasestandard_triplicate.csv") #our Trypsin standard
protease_data <- read_csv('Protease_Assay_3.31.22/proteasereadings_3.31.22.csv') #our data
compare <- read_csv('PAO1lasRlasRrhlRfluor.csv')
df <- standard #use this
df1 <- protease_data
df2 <- compare
mod2 = lm(Trypsin ~ Fluorescence, data=df)
summary(mod2)
plot2 <- plot(df$`Fluorescence`, (df$Trypsin))
abline(mod2)
standard <-read_csv("Protease_Assay_3.31.22/proteasestandard_3.31.22.csv") #our Trypsin standard
protease_data <- read_csv('Protease_Assay_3.31.22/proteasereadings_3.31.22.csv') #our data
compare <- read_csv('PAO1lasRlasRrhlRfluor.csv')
df <- standard #use this
df1 <- protease_data
df2 <- compare
mod2 = lm(Trypsin ~ Fluorescence, data=df)
summary(mod2)
plot2 <- plot(df$`Fluorescence`, (df$Trypsin))
abline(mod2)
df1 <- rbind(df2,df)
View(df1)
View(df2)
df <- standard #use this
df <- protease_data
df2 <- compare
df1 <- rbind(df2,df)
df <- standard #use this
df1 <- protease_data
df2 <- compare
df3 <- rbind(df2,df1)
df1 <- subset(df1, select = -c(Rep))
df3 <- rbind(df2,df1)
df2 <- subset(df2, select = -c[4])
df2 <- subset(df2, select = -c([4]))
df2 <- subset(df2, select = -c(X4))
df3 <- rbind(df2,df1)
View(df3)
mod2 = lm(Trypsin ~ Fluorescence, data=df)
summary(mod2)
plot2 <- plot(df$`Fluorescence`, (df$Trypsin))
abline(mod2)
Protease <- predict(mod2, data.frame(Fluorescence=df3$Fluorescence), se.fit=FALSE)
Protease <- as.data.frame(Protease)
Protease <- cbind(Protease,df3$Strain,df3$Pa_OD)
Protease$Normalized_Protease <- Protease$Protease/Protease$`df3$Pa_OD`
colnames(Protease) <-c('Protease_raw','Strain','Pa_OD','Normalized_Protease')
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
proteasedata <- data_summary(Protease, varname="Normalized_Protease",
groupnames=c("Strain"))
p<- ggplot(proteasedata, aes(x=Strain, y=Normalized_Protease)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=Normalized_Protease-sd, ymax=Normalized_Protease+sd), width=.2,
position=position_dodge(.9))
print(p)
p+labs(x="Strain", y = "Protease(µg/mL)")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values=c('#999999','#E69F00'))
combined <- rbind(df2,proteasedata)
combined$Percent <- ((combined$Normalized_Protease)/(combined$Normalized_Protease[c(1)])*100)
combined$Strain <- factor(combined$Strain,levels = combined$Strain)
p1<- ggplot(combined, aes(x=Strain, y=Percent)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
print(p1)
proteasedata$Percent <- ((proteasedata$Normalized_Protease)/(protease_data$Normalized_Protease[c(1)])*100)
proteasedata$Percent <- ((proteasedata$Normalized_Protease)/(proteasedata$Normalized_Protease[c(15)])*100)
# Add labels and make x labels vertical so you can read them
p+labs(x="Strain", y = "Protease(µg/mL)")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values=c('#999999','#E69F00'))
proteasedata$Percent <- ((proteasedata$Normalized_Protease)/(proteasedata$Normalized_Protease[c(15)])*100)
proteasedata$Strain <- factor(proteasedata$Strain,levels = proteasedata$Strain)
p1<- ggplot(combined, aes(x=Strain, y=Percent)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
print(p1)
proteasedata$Strain <- factor(proteasedata$Strain,levels = proteasedata$Strain)
p1<- ggplot(proteasedata, aes(x=Strain, y=Percent)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
print(p1)
p1+labs(x="Strain", y = "Protease Compared to PAO1 (%)")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values=c('#999999','#E69F00'))
write.table(proteasedata,
"Protease_Assay_3.31.22/includePAO1lasR/proteasedata03312022_use03312022standard.csv",
sep=",",
col.names=T,
quote=F,
row.names=F)
write.table(proteasedata,
"Protease_Assay_3.31.22/proteasedata03312022_use03312022standard.csv",
sep=",",
col.names=T,
quote=F,
row.names=F)
standard <-read_csv("proteasestandard03152022.csv") #our Trypsin standard
protease_data <- read_csv('Protease_Assay_3.31.22/proteasereadings_3.31.22.csv') #our data
compare <- read_csv('PAO1lasRlasRrhlRfluor.csv')
df <- standard #use this
df1 <- protease_data
df2 <- compare
df1 <- subset(df1, select = -c(Rep))
df2 <- subset(df2, select = -c(X4))
df3 <- rbind(df2,df1)
mod2 = lm(Trypsin ~ Fluorescence, data=df)
summary(mod2)
plot2 <- plot(df$`Fluorescence`, (df$Trypsin))
abline(mod2)
Protease <- predict(mod2, data.frame(Fluorescence=df3$Fluorescence), se.fit=FALSE)
Protease <- as.data.frame(Protease)
Protease <- cbind(Protease,df3$Strain,df3$Pa_OD)
Protease$Normalized_Protease <- Protease$Protease/Protease$`df3$Pa_OD`
colnames(Protease) <-c('Protease_raw','Strain','Pa_OD','Normalized_Protease')
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
proteasedata <- data_summary(Protease, varname="Normalized_Protease",
groupnames=c("Strain"))
p<- ggplot(proteasedata, aes(x=Strain, y=Normalized_Protease)) +
geom_bar(stat="identity", color="black",
position=position_dodge()) +
geom_errorbar(aes(ymin=Normalized_Protease-sd, ymax=Normalized_Protease+sd), width=.2,
position=position_dodge(.9))
print(p)
p+labs(x="Strain", y = "Protease(µg/mL)")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values=c('#999999','#E69F00'))
proteasedata$Percent <- ((proteasedata$Normalized_Protease)/(proteasedata$Normalized_Protease[c(15)])*100)
proteasedata$Strain <- factor(proteasedata$Strain,levels = proteasedata$Strain)
p1<- ggplot(proteasedata, aes(x=Strain, y=Percent)) +
geom_bar(stat="identity", color="black",
position=position_dodge())
print(p1)
p1+labs(x="Strain", y = "Protease Compared to PAO1 (%)")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(values=c('#999999','#E69F00'))
write.table(proteasedata,
"Protease_Assay_3.31.22/proteasedata03312022_use03152022standard.csv",
sep=",",
col.names=T,
quote=F,
row.names=F)
setwd("~/Desktop/Lab work/Bioinfo_IPCD/Frequency_of_quorum_sensing_mutations_in_Pa2021")
source('mutationcleanup.R')
ggsave('proteinvenn-full.png', plot, device = 'png')
source('countmutantsGAMMA.R')
listpqsL <- pqsL$Codon_Percent
listpqsL <- as.numeric(as.character(listpqsL))
mean(listpqsL)
listpqsD_PAK <- pqsD_PAK$Codon_Percent
listpqsD_PAK <- as.numeric(as.character(listpqsD_PAK))
mean(listpqsD_PAK)
listpqsD <- pqsD$Codon_Percent
listpqsD <- as.numeric(as.character(listpqsD))
mean(listpqsD)
pqsD <- df[grep("PAO1_pqsD", df$Gene), ]
nrow(pqsD)
pqsDmutant <- pqsD[!grepl("Native", pqsD$Match_Type),]
nrow(pqsDmutant)
pqsD_PAK <- df[grep("PAK_pqsD", df$Gene), ]
nrow(pqsD_PAK)
pqsDmutant_PAK <- pqsD_PAK[!grepl("Native", pqsD_PAK$Match_Type),]
nrow(pqsDmutant_PAK)
listpqsD <- pqsD$Codon_Percent
listpqsD <- as.numeric(as.character(listpqsD))
mean(listpqsD)
listpqsD_PAK <- pqsD_PAK$Codon_Percent
listpqsD_PAK <- as.numeric(as.character(listpqsD_PAK))
mean(listpqsD_PAK)
listrhlI <- rhlI$Codon_Percent
listrhlI <- as.numeric(as.character(listrhlI))
mean(listrhlI)
listrhlI_PAK <- rhlI_PAK$Codon_Percent
listrhlI_PAK <- as.numeric(as.character(listrhlI_PAK))
mean(listrhlI_PAK)
