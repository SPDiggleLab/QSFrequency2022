fig1a = ggplot(df.truncations, aes(x = gene, y = similarity_mean)) +
theme_gray(base_size = 14) +
geom_bar(stat = 'identity', color = 'black') +
geom_errorbar(size =2, aes(ymin = similarity_mean-similarity_sd
, ymax = similarity_mean+similarity_sd)
, width = .5) +
ylim(c(0, 1.2)) +
xlab('') +
ylab('Normalized Similarity Score') +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position = 'none'
, axis.text.x = element_text(angle = 45, hjust=1, vjust=1))
fig1a
fig1a3 = ggplot(df.truncations, aes(x = gene, y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
geom_bar(color = 'black', stat='identity') +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('') +
ylim(0, 300)
fig1a3
df.truncations
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
geom_bar(color = 'black', stat='identity', aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('') +
ylim(0, 300)
fig1a3
ggplot(df.truncations, aes(x = gene)) +
geom_bar(color = 'black', stat='identity', aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('') +
ylim(0, 300) + theme_minimal()
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal() +
geom_bar(color = 'black', stat='identity', aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
geom_bar(color = 'black', stat='identity', aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('') +
ylim(0, 300)
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
geom_bar(color = 'black', stat='identity', aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('') +
ylim(0, 300)
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', aes(y = n_unique_strains, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
geom_bar(color = 'black', stat='identity', aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', fill = 'grey', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', fill = 'grey', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.2, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', fill = 'grey', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.8, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', fill = 'grey', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', fill = 'grey80', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', fill = 'grey90', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', fill = 'grey20', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', fill = 'grey50', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', alpha = 0.5, fill = 'grey50', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', alpha = 0.5, fill = 'grey20', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', alpha = 0.2, fill = 'grey20', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', alpha = 0.2, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', alpha = 0.2, fill = 'grey30', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', alpha = 0.2, fill = 'grey40', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', alpha = 0.2, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', alpha = 0.3, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_minimal(base_size = 14) +
geom_bar(color = 'black', stat='identity', alpha = 0.4, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_gray(base_size = 14) +
geom_bar(color = 'black', stat='identity', alpha = 0.4, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_gray(base_size = 14) +
geom_bar(stat='identity', alpha = 0.4, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_gray(base_size = 14) +
geom_bar(color = 'black', stat='identity', alpha = 0.4, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_gray(base_size = 14) +
geom_bar(color = 'grey', stat='identity', alpha = 0.4, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_gray(base_size = 14) +
geom_bar(color = 'grey20', stat='identity', alpha = 0.4, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_gray(base_size = 14) +
geom_bar(color = 'grey30', stat='identity', alpha = 0.4, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('unique sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_gray(base_size = 14) +
geom_bar(color = 'grey30', stat='identity', alpha = 0.4, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.position='none') +
ylab('n sequences') +
xlab('')
fig1a3
source('~/CYZ GITHUB/Digglets/For_Conan/visualize_data_overview.R')
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_gray(base_size = 14) +
geom_bar(color = 'grey30', stat='identity', alpha = 0.4, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.title='') +
ylab('n sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_gray(base_size = 14) +
geom_bar(color = 'grey30', stat='identity', alpha = 0.4, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.title=element_blank()) +
ylab('n sequences') +
xlab('')
fig1a3
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_gray(base_size = 14) +
geom_bar(color = 'grey30', stat='identity', alpha = 0.4, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.title=element_blank()) +
ylab('n sequences') +
xlab('')
fig1a3
df.truncations
self_align
v.dist
hist(v.dist)
hist(v.dist[v.dist!=1])
hist(log(v.dist[v.dist!=1]))
hist(v.dist[v.dist!=1]
)
rm(list=ls())
require(ggplot2)
require(reshape2)
require(Biostrings)
# Load Data
load('OBJECTS/gene_trunc_stats.R')
load('OBJECTS/list_of_strain_distMats_by_gene.R')
load('OBJECTS/PCA_VIZ.R')
df.truncations$similarity_mean = NA
df.truncations$similarity_sd = NA
temp.truncDist = list()
for(gene in names(ls.refDist_by_gene)){
# Get Reference
ref_aminos = read.table(paste('INPUT/ref_genes/', gene, '_PAO1_protein.txt', sep='', collapse='')
, stringsAsFactors = F)$V1
ref_aminos = AAString(ref_aminos) # read in as biocstring object
# Calculate self-distance score
self_align = pairwiseAlignment(ref_aminos
, ref_aminos
, substitutionMatrix = "BLOSUM80"
, gapOpening=11
, gapExtension=1)@score
# normalize to self
v.dist = ls.refDist_by_gene[[gene]] / self_align
# get simple stats
mean_dist = mean(v.dist)
sd_dist = sd(v.dist)
df.truncations[gene, 'similarity_mean'] = mean_dist
df.truncations[gene, 'similarity_sd'] = sd_dist
temp.truncDist[[gene]] = data.frame('gene' = gene, 'dist' = vdist[vdist!=1])
}
source('~/CYZ GITHUB/Digglets/For_Conan/visualize_data_overview.R')
source('~/CYZ GITHUB/Digglets/For_Conan/visualize_data_overview.R')
temp.truncDist
do.call('rbind', temp.truncDist)
#
temp.truncDist_df = do.call('rbind', temp.truncDist)
#
temp.truncDist_df = do.call('rbind', temp.truncDist)
temp.truncDist_df
head(temp.truncDist_df)
ggplot(temp.truncDist_df, aes(x = gene, y = dist)) + geom_boxplot()
ggplot(temp.truncDist_df, aes(x = gene, y = 1-dist)) + geom_boxplot() + scale_y_log10()
temp.truncDist = list()
for(gene in names(ls.refDist_by_gene)){
# Get Reference
ref_aminos = read.table(paste('INPUT/ref_genes/', gene, '_PAO1_protein.txt', sep='', collapse='')
, stringsAsFactors = F)$V1
ref_aminos = AAString(ref_aminos) # read in as biocstring object
# Calculate self-distance score
self_align = pairwiseAlignment(ref_aminos
, ref_aminos
, substitutionMatrix = "BLOSUM80"
, gapOpening=11
, gapExtension=1)@score
# normalize to self
v.dist = ls.refDist_by_gene[[gene]] / self_align
# get simple stats
mean_dist = mean(v.dist)
sd_dist = sd(v.dist)
df.truncations[gene, 'similarity_mean'] = mean_dist
df.truncations[gene, 'similarity_sd'] = sd_dist
# for plotting histogram
temp.truncDist[[gene]] = data.frame('gene' = gene, 'dist' = v.dist[v.dist!=1], 'same' = 0+(v.dist!=1))
}
temp.truncDist_df = do.call('rbind', temp.truncDist)
source('~/CYZ GITHUB/Digglets/For_Conan/visualize_data_overview.R')
source('~/CYZ GITHUB/Digglets/For_Conan/visualize_data_overview.R')
ggplot(temp.truncDist_df, aes(x = gene, y = 1-dist)) + geom_boxplot() + scale_y_log10()
ggplot(temp.truncDist_df, aes(x = gene)) + geom_boxplot() + scale_y_log10()
ggplot(temp.truncDist_df, aes(x = gene, y = dist)) + geom_boxplot() + scale_y_log10()
ggplot(temp.truncDist_df, aes(x = gene, y = 1-dist)) + geom_boxplot() + scale_y_log10()
fig1a3 = ggplot(df.truncations, aes(x = gene)) +
theme_gray(base_size = 14) +
geom_bar(color = 'grey30', stat='identity', alpha = 0.4, fill = 'grey10', aes(y = n_unique_strains)) +
geom_bar(color = 'black', stat='identity', alpha = 0.9, aes(y = n_unique_seqs, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
scale_fill_brewer(palette = 'Paired') +
theme(legend.title=element_blank()) +
ylab('n sequences') +
xlab('')
fig1a3
fig1a4 = ggplot(temp.truncDist_df, aes(x = gene, y = 1-dist)) +
theme_gray(base_size = 14) +
geom_boxplot()
ggplot(temp.truncDist_df, aes(x = gene, y = 1-dist)) + geom_boxplot() + scale_y_log10()fig1a4
fig1a4
fig1a4 = ggplot(temp.truncDist_df, aes(x = gene, y = 1-dist)) +
theme_gray(base_size = 14) +
geom_boxplot() +
scale_y_log10()
fig1a4
source('~/CYZ GITHUB/Digglets/For_Conan/visualize_data_overview.R')
fig1a4 = ggplot(temp.truncDist_df, aes(x = gene, y = 1-dist, fill = sapply(df.truncations$gene, function(x){substr(x,1,3)}))) +
theme_gray(base_size = 14) +
geom_boxplot() +
scale_y_log10() +
xlab('') +
ylab('dissimilarity')
fig1a4
temp.truncDist_df
fig1a4 = ggplot(temp.truncDist_df, aes(x = gene, y = 1-dist, fill = sapply(temp.truncDist_df$gene, function(x){substr(x,1,3)}))) +
theme_gray(base_size = 14) +
geom_boxplot() +
scale_y_log10() +
xlab('') +
ylab('dissimilarity')
fig1a4
fig1a4 = ggplot(temp.truncDist_df, aes(x = gene, y = 1-dist, fill = sapply(temp.truncDist_df$gene, function(x){substr(x,1,3)}))) +
theme_gray(base_size = 14) +
geom_boxplot() +
scale_y_log10() +
theme(legend.title=element_blank()) +
xlab('') +
ylab('dissimilarity')
fig1a4
fig1a4 = ggplot(temp.truncDist_df, aes(x = gene, y = 1-dist, fill = sapply(temp.truncDist_df$gene, function(x){substr(x,1,3)}))) +
theme_gray(base_size = 14) +
geom_boxplot() +
scale_y_log10() +
scale_fill_brewer(palette = 'Paired') +
theme(legend.title=element_blank()) +
xlab('') +
ylab('dissimilarity')
fig1a4
fig1a4 = ggplot(temp.truncDist_df, aes(x = gene, y = 1-dist, fill = sapply(temp.truncDist_df$gene, function(x){substr(x,1,3)}))) +
theme_gray(base_size = 14) +
geom_boxplot(size=2) +
scale_y_log10() +
scale_fill_brewer(palette = 'Paired') +
theme(legend.title=element_blank()) +
xlab('') +
ylab('dissimilarity')
fig1a4
fig1a4 = ggplot(temp.truncDist_df, aes(x = gene, y = 1-dist, fill = sapply(temp.truncDist_df$gene, function(x){substr(x,1,3)}))) +
theme_gray(base_size = 14) +
geom_boxplot(size=1) +
scale_y_log10() +
scale_fill_brewer(palette = 'Paired') +
theme(legend.title=element_blank()) +
xlab('') +
ylab('dissimilarity')
fig1a4
fig1a4 = ggplot(temp.truncDist_df, aes(x = gene, y = 1-dist, fill = sapply(temp.truncDist_df$gene, function(x){substr(x,1,3)}))) +
theme_gray(base_size = 14) +
geom_boxplot(size=0.8) +
scale_y_log10() +
scale_fill_brewer(palette = 'Paired') +
theme(legend.title=element_blank()) +
xlab('') +
ylab('dissimilarity')
fig1a4
fig1a4 = ggplot(temp.truncDist_df, aes(x = gene, y = 1-dist, fill = sapply(temp.truncDist_df$gene, function(x){substr(x,1,3)}))) +
theme_gray(base_size = 14) +
geom_boxplot() +
scale_y_log10() +
scale_fill_brewer(palette = 'Paired') +
theme(legend.title=element_blank()) +
xlab('') +
ylab('dissimilarity')
fig1a4
fig1_full = plot_grid(fig1a3, fig1a4, fig1b, fig1c
, labels = c('A', 'B', 'C', 'D')
, nrow = 2
, rel_widths = c(1, 1.5, 1, 1.5))
fig1_full
require(cowplot)
fig1_full = plot_grid(fig1a3, fig1b, fig1a4, fig1c
, labels = c('A', 'B', 'C', 'D')
, nrow = 2
, rel_widths = c(1, 1, 1, 1))
fig1_full
fig1_full = plot_grid(fig1a3, fig1b, fig1a4, fig1c
, labels = c('A', 'B', 'C', 'D')
, nrow = 2
, rel_widths = c(1.5, 1.5, 1, 1))
fig1_full
require(cowplot)
fig1_full = plot_grid(fig1a3, fig1b, fig1a4, fig1c
, labels = c('A', 'B', 'C', 'D')
, nrow = 2
, rel_widths = c(1.5, 1, 1.5, 1))
fig1_full
require(cowplot)
fig1_full = plot_grid(fig1a3, fig1b, fig1a4, fig1c
, labels = c('A', 'B', 'C', 'D')
, nrow = 2
, rel_widths = c(2, 1, 2, 1))
fig1_full
fig2_full = plot_grid(fig2a, fig2b, labels = c('A', 'B')
, rel_widths = c(1, 2))
fig2_full
require(Biostrings)
library(Biostrings)
sessionInfo()
source('~/CYZ GITHUB/Digglets/For_Conan/visualize_data_overview.R')
